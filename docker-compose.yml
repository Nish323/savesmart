services:
  # === Laravel (PHP-FPM) ==========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - db
    env_file:
      - ./backend/.env
    healthcheck:
      test: [ "CMD", "php", "artisan", "health:check" ]
      interval: 30s
      timeout: 10s
      retries: 3
      disable: true
    user: "${UID}:${GID}"
    networks:
      - backend-network

  # === Nginx (Reverse Proxy) =====================================
  nginx:
    build:
      context: ./backend/docker/nginx
    image: nginx:stable
    container_name: nginx
    volumes:
      - ./backend:/var/www/html
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:8000"
    depends_on:
      - backend
    networks:
      - backend-network

  # === MySQL ====================================================
  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    networks:
      - backend-network

  # === Next.js (フロントエンド) ==================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app # ソースコードをホットリロード
      - /app/node_modules # node_modulesはコンテナ内管理（重要）
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL_CLIENT: "http://localhost:8000/api" # API URLも確認
      NEXT_PUBLIC_API_URL_SERVER: "http://nginx:8000/api"
    command: npm run dev
    networks:
      - backend-network

volumes:
  db_data:

networks:
  backend-network:
    driver: bridge